@page "/login"
@using GymApp.Services.UserService
@using GymApp.Models
@inject NavigationManager Navigation
@inject IUserService UserService
@rendermode InteractiveServer

<div class="login-container">
    <h2>Login</h2>

    <div class="form-group">
        <label for="username">Username</label>
        <input id="username" type="text" @bind="user.Username" class="form-control" @onkeydown="HandleKeyPress" />
        @if (showUsernameError)
        {
            <p class="validation-message">Username is required.</p>
        }
    </div>

    <div class="form-group">
        <label for="password">Password</label>
        <input id="password" type="password" @bind="user.Password" class="form-control" @onkeydown="HandleKeyPress" />
        @if (showPasswordError)
        {
            <p class="validation-message">Password is required.</p>
        }
    </div>

    <div class="button-container">
        <button class="btn btn-secondary" @onclick="HandleSubmit">Login</button>
    </div>

    @if (!string.IsNullOrEmpty(errorMessage))
    {
        <p class="error-message">@errorMessage</p>
    }
</div>

@code {
    private GymApp.Models.User user = new User(0, "", "");
    private string? errorMessage;
    private bool showUsernameError;
    private bool showPasswordError;

    private async void HandleSubmit()
    {
        Console.Write("we are here\n");
        showUsernameError = string.IsNullOrEmpty(user.Username);
        showPasswordError = string.IsNullOrEmpty(user.Password);

        if (showUsernameError || showPasswordError)
        {
            errorMessage = "Please fill in all required fields.";
            return;
        }
        var dict = await UserService.LoginUser(user.Username, user.Password);
        Console.WriteLine(dict.GetValueOrDefault("jwt"));
        if (dict.ContainsKey("jwt"))
        {
            Navigation.NavigateTo("/home");
            Console.Write("we did something\n");
        }
        else
        {
            errorMessage = "Invalid username or password.";
        }
    }

    private void HandleKeyPress(KeyboardEventArgs e)
    {
        if (e.Key == "Enter")
        {
            HandleSubmit();
        }
    }

    private void ValidateForm()
    {
        showUsernameError = string.IsNullOrEmpty(user.Username);
        showPasswordError = string.IsNullOrEmpty(user.Password);
    }

}
