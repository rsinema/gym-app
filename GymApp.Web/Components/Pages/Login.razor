@page "/login"
@using GymApp.Services.LocalStorage
@using GymApp.Services.UserService
@using GymApp.Models
@inject NavigationManager Navigation
@inject IUserService UserService
@inject LocalStorageService LocalStorage
@rendermode InteractiveServer

<div class="login-container">
    <h2>Login</h2>

    <form @onsubmit="HandleSubmit">
        <div class="form-group">
            <label for="username">Username</label>
            <input id="username" type="text" @bind="username" class="form-control" />
            @if (showUsernameError)
            {
                <p class="validation-message">Username is required.</p>
            }
        </div>

        <div class="form-group">
            <label for="password">Password</label>
            <input id="password" type="password" @bind="password" class="form-control" />
            @if (showPasswordError)
            {
                <p class="validation-message">Password is required.</p>
            }
        </div>

        <button type="submit" class="btn btn-secondary">Login</button>
    </form>

    @if (!string.IsNullOrEmpty(errorMessage))
    {
        <p class="error-message">@errorMessage</p>
    }
</div>

@code {
    private string username = string.Empty;
    private string password = string.Empty;
    private User newUser = new(0, string.Empty, string.Empty);
    private string? errorMessage;
    private bool showUsernameError;
    private bool showPasswordError;

    private async Task HandleSubmit()
    {
        showUsernameError = string.IsNullOrEmpty(newUser.Username);
        showPasswordError = string.IsNullOrEmpty(newUser.Password);

        if (!showUsernameError || !showPasswordError)
        {
            errorMessage = "Please fill in all required fields correctly.";
            return;
        }

        var (success, token, error) = await UserService.LoginUser(username, password);
        
        if (success && token != null)
        {
            await LocalStorage.SetItemAsync("jwt_token", token);
            await LocalStorage.SetItemAsync("username", username);
            Navigation.NavigateTo("/dashboard");
        }
        else
        {
            errorMessage = error ?? "Login failed. Please try again.";
        }
    }
}

