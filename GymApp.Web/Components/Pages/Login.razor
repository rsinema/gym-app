@page "/login"
@using GymApp.Services.LocalStorage
@using GymApp.Services.UserService
@using GymApp.Models
@inject NavigationManager Navigation
@inject IUserService UserService
@inject LocalStorageService LocalStorage
@rendermode InteractiveServer

<div class="login-container">
    <h2>Login</h2>

    <div class="form-group">
        <label for="username">Username</label>
        <input id="username" type="text" @bind="user.Username" class="form-control" />
    </div>

    <div class="form-group">
        <label for="password">Password</label>
        <input id="password" type="password" @bind="user.Password" class="form-control"/>
    </div>

    <div class="button-container">
        <button class="btn btn-secondary" @onclick="HandleSubmit">Login</button>
    </div>

    @if (!string.IsNullOrEmpty(errorMessage))
    {
        <p class="error-message">@errorMessage</p>
    }
</div>

@code {
    private User user = new User(0, "", "");
    private string? errorMessage;

    private async void HandleSubmit()
    {
        var (success, token, error, userId) = await UserService.LoginUser(user.Username, user.Password);
        
        if (success && token != null)
        {
            await LocalStorage.SetItemAsync("jwt_token", token);
            await LocalStorage.SetItemAsync("username", user.Username);
            await LocalStorage.SetItemAsync("userId", userId.ToString());
            Navigation.NavigateTo("/dashboard");
        }
        else
        {
            errorMessage = error ?? "Login failed. Please try again.";
        }
    }
}

