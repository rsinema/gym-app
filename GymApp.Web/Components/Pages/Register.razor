@page "/register"
@inject NavigationManager Navigation
@rendermode InteractiveServer


<div class="register-container">
    <h2>Register</h2>

    <form @onsubmit="HandleRegister">
        <div class="form-group">
            <label for="firstname">First Name</label>
            <input id="firstname" type="text" @bind="newUser.Firstname" class="form-control" />
            @if (showFirstnameError)
            {
                <p class="validation-message">First name is required.</p>
            }
        </div>

        <div class="form-group">
            <label for="lastname">Last Name</label>
            <input id="lastname" type="text" @bind="newUser.Lastname" class="form-control" />
            @if (showLastnameError)
            {
                <p class="validation-message">Last name is required.</p>
            }
        </div>

        <div class="form-group">
            <label for="username">Username</label>
            <input id="username" type="text" @bind="newUser.Username" class="form-control" />
            @if (showUsernameError)
            {
                <p class="validation-message">Username is required.</p>
            }
        </div>

        <div class="form-group">
            <label for="password">Password</label>
            <input id="password" type="password" @bind="newUser.Password" class="form-control" />
            @if (showPasswordError)
            {
                <p class="validation-message">Password is required.</p>
            }
        </div>

        <div class="form-group">
            <label for="confirmPassword">Confirm Password</label>
            <input id="confirmPassword" type="password" @bind="confirmPassword" class="form-control" />
            @if (showConfirmPasswordError)
            {
                <p class="validation-message">Passwords do not match.</p>
            }
        </div>
        
        <button type="submit" class="btn btn-secondary">Register</button>
    </form>

    @if (!string.IsNullOrEmpty(errorMessage))
    {
        <p class="error-message">@errorMessage</p>
    }
</div>

@code {
    private UserModel newUser = new();
    private string confirmPassword;
    private string errorMessage;
    private bool showUsernameError;
    private bool showPasswordError;
    private bool showConfirmPasswordError;
    private bool showFirstnameError;
    private bool showLastnameError;

    private async Task HandleRegister()
    {
        showUsernameError = string.IsNullOrEmpty(newUser.Username);
        showPasswordError = string.IsNullOrEmpty(newUser.Password);
        showFirstnameError = string.IsNullOrEmpty(newUser.Firstname);
        showLastnameError = string.IsNullOrEmpty(newUser.Lastname);

        showConfirmPasswordError = newUser.Password != confirmPassword;

        if (showUsernameError || showPasswordError || showConfirmPasswordError || showFirstnameError || showLastnameError)
        {
            errorMessage = "Please fill in all required fields correctly.";
            return;
        }
        
        
        Navigation.NavigateTo("/dashboard");
    }

    public class UserModel
    {
        public string Username { get; set; }
        public string Password { get; set; }
        public string Firstname { get; set; }
        public string Lastname { get; set; }
    }
}
